{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport Graph3D from './components/Graph3D.vue';\nimport api from './services/api';\nexport default {\n  name: 'App',\n  components: {\n    Graph3D\n  },\n  setup() {\n    const searchTerm = ref('');\n    const searchResults = ref([]);\n    const recentProcedures = ref([]);\n    const graphData = ref({\n      nodes: [],\n      links: []\n    });\n    const apiBaseUrl = ref('/api');\n    const graph3d = ref(null);\n\n    // 上传相关\n    const showUpload = ref(false);\n    const selectedFiles = ref([]);\n\n    // 帮助相关\n    const showHelp = ref(false);\n\n    // 初始化\n    onMounted(() => {\n      // 加载最近访问记录\n      loadRecentProcedures();\n\n      // 监听键盘事件\n      document.addEventListener('keydown', handleKeyDown);\n    });\n\n    // 加载最近访问的存储过程\n    const loadRecentProcedures = () => {\n      const recent = localStorage.getItem('recentProcedures');\n      if (recent) {\n        try {\n          recentProcedures.value = JSON.parse(recent);\n        } catch (error) {\n          console.error('解析最近访问记录失败', error);\n          recentProcedures.value = [];\n        }\n      }\n    };\n\n    // 添加到最近访问\n    const addToRecentProcedures = procedure => {\n      // 检查是否已存在\n      const index = recentProcedures.value.findIndex(p => p.name === procedure.name);\n      if (index !== -1) {\n        // 已存在，移到最前面\n        recentProcedures.value.splice(index, 1);\n      }\n      // frontend/src/App.vue (continued)\n      // 已存在，移到最前面\n      recentProcedures.value.splice(index, 1);\n\n      // 添加到最前面\n      recentProcedures.value.unshift(procedure);\n\n      // 只保留最近10个\n      if (recentProcedures.value.length > 10) {\n        recentProcedures.value = recentProcedures.value.slice(0, 10);\n      }\n\n      // 保存到本地存储\n      localStorage.setItem('recentProcedures', JSON.stringify(recentProcedures.value));\n    };\n\n    // 搜索存储过程\n    const search = async () => {\n      if (!searchTerm.value) return;\n      try {\n        const response = await api.searchProcedures(searchTerm.value);\n        searchResults.value = response.data.procedures || [];\n      } catch (error) {\n        console.error('搜索失败', error);\n        alert('搜索失败，请重试');\n      }\n    };\n\n    // 加载调用链\n    const loadCallChain = async procedureName => {\n      try {\n        // 显示加载中状态\n        // TODO: 添加加载指示器\n\n        // 调用API获取调用链数据\n        const response = await api.getCallChain(procedureName);\n        graphData.value = response.data;\n\n        // 添加到最近访问\n        addToRecentProcedures({\n          name: procedureName\n        });\n\n        // 如果有Graph3D组件引用，可以直接调用其方法\n        if (graph3d.value) {\n          // 假设Graph3D组件有一个loadData方法\n          graph3d.value.loadData(response.data);\n        }\n      } catch (error) {\n        console.error('加载调用链失败', error);\n        alert('加载调用链失败，请重试');\n      }\n    };\n\n    // 处理节点选中事件\n    const handleNodeSelected = node => {\n      console.log('节点被选中', node);\n      // 可以在这里添加处理逻辑\n    };\n\n    // 显示上传对话框\n    const showUploadDialog = () => {\n      showUpload.value = true;\n    };\n\n    // 取消上传\n    const cancelUpload = () => {\n      showUpload.value = false;\n      selectedFiles.value = [];\n    };\n\n    // 处理文件选择\n    const handleFileUpload = event => {\n      selectedFiles.value = Array.from(event.target.files);\n    };\n\n    // 上传文件\n    const uploadFiles = async () => {\n      if (selectedFiles.value.length === 0) return;\n      const formData = new FormData();\n      selectedFiles.value.forEach(file => {\n        formData.append('files', file);\n      });\n      try {\n        // 假设有一个上传API\n        const response = await fetch(`${apiBaseUrl.value}/upload`, {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error('上传失败');\n        }\n        const result = await response.json();\n        alert(`成功上传 ${result.success_count} 个文件，解析失败 ${result.failed_count} 个文件`);\n\n        // 关闭对话框\n        cancelUpload();\n\n        // 如果有新解析的存储过程，加载第一个\n        if (result.procedures && result.procedures.length > 0) {\n          loadCallChain(result.procedures[0].name);\n        }\n      } catch (error) {\n        console.error('上传失败', error);\n        alert('上传失败，请重试');\n      }\n    };\n\n    // 显示帮助对话框\n    const showHelpDialog = () => {\n      showHelp.value = true;\n    };\n\n    // 处理键盘事件\n    const handleKeyDown = event => {\n      // 按空格键重置视图\n      if (event.key === ' ' && !event.target.tagName.match(/INPUT|TEXTAREA/i)) {\n        if (graph3d.value) {\n          graph3d.value.resetCamera();\n        }\n        event.preventDefault();\n      }\n\n      // 按ESC键取消选择\n      if (event.key === 'Escape') {\n        if (graph3d.value) {\n          graph3d.value.closeDetails();\n        }\n      }\n    };\n    return {\n      searchTerm,\n      searchResults,\n      recentProcedures,\n      graphData,\n      apiBaseUrl,\n      graph3d,\n      showUpload,\n      showHelp,\n      selectedFiles,\n      search,\n      loadCallChain,\n      handleNodeSelected,\n      showUploadDialog,\n      cancelUpload,\n      handleFileUpload,\n      uploadFiles,\n      showHelpDialog\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","Graph3D","api","name","components","setup","searchTerm","searchResults","recentProcedures","graphData","nodes","links","apiBaseUrl","graph3d","showUpload","selectedFiles","showHelp","loadRecentProcedures","document","addEventListener","handleKeyDown","recent","localStorage","getItem","value","JSON","parse","error","console","addToRecentProcedures","procedure","index","findIndex","p","splice","unshift","length","slice","setItem","stringify","search","response","searchProcedures","data","procedures","alert","loadCallChain","procedureName","getCallChain","loadData","handleNodeSelected","node","log","showUploadDialog","cancelUpload","handleFileUpload","event","Array","from","target","files","uploadFiles","formData","FormData","forEach","file","append","fetch","method","body","ok","Error","result","json","success_count","failed_count","showHelpDialog","key","tagName","match","resetCamera","preventDefault","closeDetails"],"sources":["/mnt/c/gitProjects/workProjects/oracle-plus/frontend/src/App.vue"],"sourcesContent":["// frontend/src/App.vue\r\n<template>\r\n  <div class=\"app\">\r\n    <header class=\"header\">\r\n      <h1>Oracle存储过程3D调用链分析图谱系统</h1>\r\n      <div class=\"actions\">\r\n        <button @click=\"showUploadDialog\">上传存储过程</button>\r\n        <button @click=\"showHelpDialog\">帮助</button>\r\n      </div>\r\n    </header>\r\n    \r\n    <main class=\"main\">\r\n      <div class=\"sidebar\">\r\n        <div class=\"search-panel\">\r\n          <h3>快速搜索</h3>\r\n          <div class=\"search-input\">\r\n            <input \r\n              v-model=\"searchTerm\" \r\n              type=\"text\" \r\n              placeholder=\"搜索存储过程...\"\r\n              @keyup.enter=\"search\"\r\n            />\r\n            <button @click=\"search\">搜索</button>\r\n          </div>\r\n          <div v-if=\"searchResults.length > 0\" class=\"search-results\">\r\n            <h4>搜索结果</h4>\r\n            <ul>\r\n              <li \r\n                v-for=\"result in searchResults\" \r\n                :key=\"result.name\"\r\n                @click=\"loadCallChain(result.name)\"\r\n              >\r\n                <span class=\"name\">{{ result.name }}</span>\r\n                <span class=\"schema\">{{ result.schema }}</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"recent-panel\">\r\n          <h3>最近访问</h3>\r\n          <ul v-if=\"recentProcedures.length > 0\">\r\n            <li \r\n              v-for=\"proc in recentProcedures\" \r\n              :key=\"proc.name\"\r\n              @click=\"loadCallChain(proc.name)\"\r\n            >\r\n              {{ proc.name }}\r\n            </li>\r\n          </ul>\r\n          <p v-else>暂无最近访问记录</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"content\">\r\n        <Graph3D \r\n          ref=\"graph3d\"\r\n          :initial-data=\"graphData\"\r\n          :api-base-url=\"apiBaseUrl\"\r\n          @node-selected=\"handleNodeSelected\"\r\n        />\r\n      </div>\r\n    </main>\r\n    \r\n    <!-- 上传对话框 -->\r\n    <div v-if=\"showUpload\" class=\"dialog-overlay\">\r\n      <div class=\"dialog\">\r\n        <h2>上传存储过程文件</h2>\r\n        <div class=\"upload-area\">\r\n          <input \r\n            type=\"file\" \r\n            accept=\".sql,.pls,.plb,.bdy\"\r\n            multiple\r\n            @change=\"handleFileUpload\"\r\n          />\r\n          <p class=\"help-text\">支持 .sql, .pls, .plb, .bdy 格式文件</p>\r\n        </div>\r\n        <div class=\"dialog-actions\">\r\n          <button @click=\"uploadFiles\" :disabled=\"!selectedFiles.length\">上传</button>\r\n          <button class=\"cancel\" @click=\"cancelUpload\">取消</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 帮助对话框 -->\r\n    <div v-if=\"showHelp\" class=\"dialog-overlay\">\r\n      <div class=\"dialog help-dialog\">\r\n        <h2>系统帮助</h2>\r\n        <div class=\"help-content\">\r\n          <h3>基本操作</h3>\r\n          <ul>\r\n            <li><strong>搜索</strong>: 输入存储过程名称搜索</li>\r\n            <li><strong>查看调用链</strong>: 点击搜索结果加载调用链</li>\r\n            <li><strong>节点交互</strong>: 点击节点查看详细信息</li>\r\n            <li><strong>调整视图</strong>: 使用鼠标滚轮缩放，拖拽旋转</li>\r\n          </ul>\r\n          \r\n          <h3>图谱说明</h3>\r\n          <ul>\r\n            <li><strong>红色节点</strong>: 存储过程</li>\r\n            <li><strong>蓝色节点</strong>: 表</li>\r\n            <li><strong>橙色节点</strong>: 动态表</li>\r\n            <li><strong>紫色连线</strong>: 调用关系</li>\r\n            <li><strong>绿色连线</strong>: 引用关系</li>\r\n          </ul>\r\n          \r\n          <h3>快捷键</h3>\r\n          <ul>\r\n            <li><strong>空格</strong>: 重置视图</li>\r\n            <li><strong>Esc</strong>: 取消选择</li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"dialog-actions\">\r\n          <button @click=\"showHelp = false\">关闭</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport Graph3D from './components/Graph3D.vue';\r\nimport api from './services/api';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    Graph3D\r\n  },\r\n  setup() {\r\n    const searchTerm = ref('');\r\n    const searchResults = ref([]);\r\n    const recentProcedures = ref([]);\r\n    const graphData = ref({ nodes: [], links: [] });\r\n    const apiBaseUrl = ref('/api');\r\n    const graph3d = ref(null);\r\n    \r\n    // 上传相关\r\n    const showUpload = ref(false);\r\n    const selectedFiles = ref([]);\r\n    \r\n    // 帮助相关\r\n    const showHelp = ref(false);\r\n    \r\n    // 初始化\r\n    onMounted(() => {\r\n      // 加载最近访问记录\r\n      loadRecentProcedures();\r\n      \r\n      // 监听键盘事件\r\n      document.addEventListener('keydown', handleKeyDown);\r\n    });\r\n    \r\n    // 加载最近访问的存储过程\r\n    const loadRecentProcedures = () => {\r\n      const recent = localStorage.getItem('recentProcedures');\r\n      if (recent) {\r\n        try {\r\n          recentProcedures.value = JSON.parse(recent);\r\n        } catch (error) {\r\n          console.error('解析最近访问记录失败', error);\r\n          recentProcedures.value = [];\r\n        }\r\n      }\r\n    };\r\n    \r\n    // 添加到最近访问\r\n    const addToRecentProcedures = (procedure) => {\r\n      // 检查是否已存在\r\n      const index = recentProcedures.value.findIndex(p => p.name === procedure.name);\r\n      if (index !== -1) {\r\n        // 已存在，移到最前面\r\n        recentProcedures.value.splice(index, 1);\r\n      }\r\n      // frontend/src/App.vue (continued)\r\n      // 已存在，移到最前面\r\n      recentProcedures.value.splice(index, 1);\r\n      \r\n      // 添加到最前面\r\n      recentProcedures.value.unshift(procedure);\r\n      \r\n      // 只保留最近10个\r\n      if (recentProcedures.value.length > 10) {\r\n        recentProcedures.value = recentProcedures.value.slice(0, 10);\r\n      }\r\n      \r\n      // 保存到本地存储\r\n      localStorage.setItem('recentProcedures', JSON.stringify(recentProcedures.value));\r\n    };\r\n    \r\n    // 搜索存储过程\r\n    const search = async () => {\r\n      if (!searchTerm.value) return;\r\n      \r\n      try {\r\n        const response = await api.searchProcedures(searchTerm.value);\r\n        searchResults.value = response.data.procedures || [];\r\n      } catch (error) {\r\n        console.error('搜索失败', error);\r\n        alert('搜索失败，请重试');\r\n      }\r\n    };\r\n    \r\n    // 加载调用链\r\n    const loadCallChain = async (procedureName) => {\r\n      try {\r\n        // 显示加载中状态\r\n        // TODO: 添加加载指示器\r\n        \r\n        // 调用API获取调用链数据\r\n        const response = await api.getCallChain(procedureName);\r\n        graphData.value = response.data;\r\n        \r\n        // 添加到最近访问\r\n        addToRecentProcedures({ name: procedureName });\r\n        \r\n        // 如果有Graph3D组件引用，可以直接调用其方法\r\n        if (graph3d.value) {\r\n          // 假设Graph3D组件有一个loadData方法\r\n          graph3d.value.loadData(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('加载调用链失败', error);\r\n        alert('加载调用链失败，请重试');\r\n      }\r\n    };\r\n    \r\n    // 处理节点选中事件\r\n    const handleNodeSelected = (node) => {\r\n      console.log('节点被选中', node);\r\n      // 可以在这里添加处理逻辑\r\n    };\r\n    \r\n    // 显示上传对话框\r\n    const showUploadDialog = () => {\r\n      showUpload.value = true;\r\n    };\r\n    \r\n    // 取消上传\r\n    const cancelUpload = () => {\r\n      showUpload.value = false;\r\n      selectedFiles.value = [];\r\n    };\r\n    \r\n    // 处理文件选择\r\n    const handleFileUpload = (event) => {\r\n      selectedFiles.value = Array.from(event.target.files);\r\n    };\r\n    \r\n    // 上传文件\r\n    const uploadFiles = async () => {\r\n      if (selectedFiles.value.length === 0) return;\r\n      \r\n      const formData = new FormData();\r\n      selectedFiles.value.forEach(file => {\r\n        formData.append('files', file);\r\n      });\r\n      \r\n      try {\r\n        // 假设有一个上传API\r\n        const response = await fetch(`${apiBaseUrl.value}/upload`, {\r\n          method: 'POST',\r\n          body: formData\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('上传失败');\r\n        }\r\n        \r\n        const result = await response.json();\r\n        \r\n        alert(`成功上传 ${result.success_count} 个文件，解析失败 ${result.failed_count} 个文件`);\r\n        \r\n        // 关闭对话框\r\n        cancelUpload();\r\n        \r\n        // 如果有新解析的存储过程，加载第一个\r\n        if (result.procedures && result.procedures.length > 0) {\r\n          loadCallChain(result.procedures[0].name);\r\n        }\r\n      } catch (error) {\r\n        console.error('上传失败', error);\r\n        alert('上传失败，请重试');\r\n      }\r\n    };\r\n    \r\n    // 显示帮助对话框\r\n    const showHelpDialog = () => {\r\n      showHelp.value = true;\r\n    };\r\n    \r\n    // 处理键盘事件\r\n    const handleKeyDown = (event) => {\r\n      // 按空格键重置视图\r\n      if (event.key === ' ' && !event.target.tagName.match(/INPUT|TEXTAREA/i)) {\r\n        if (graph3d.value) {\r\n          graph3d.value.resetCamera();\r\n        }\r\n        event.preventDefault();\r\n      }\r\n      \r\n      // 按ESC键取消选择\r\n      if (event.key === 'Escape') {\r\n        if (graph3d.value) {\r\n          graph3d.value.closeDetails();\r\n        }\r\n      }\r\n    };\r\n    \r\n    return {\r\n      searchTerm,\r\n      searchResults,\r\n      recentProcedures,\r\n      graphData,\r\n      apiBaseUrl,\r\n      graph3d,\r\n      showUpload,\r\n      showHelp,\r\n      selectedFiles,\r\n      search,\r\n      loadCallChain,\r\n      handleNodeSelected,\r\n      showUploadDialog,\r\n      cancelUpload,\r\n      handleFileUpload,\r\n      uploadFiles,\r\n      showHelpDialog\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 全局样式 */\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  line-height: 1.6;\r\n  color: #333;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.app {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n/* 头部样式 */\r\n.header {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header h1 {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\n.actions button {\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  color: white;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.actions button:hover {\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n/* 主内容区样式 */\r\n.main {\r\n  display: flex;\r\n  flex: 1;\r\n}\r\n\r\n.sidebar {\r\n  width: 300px;\r\n  background-color: white;\r\n  border-right: 1px solid #dee2e6;\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 1rem;\r\n}\r\n\r\n/* 搜索面板样式 */\r\n.search-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.search-panel h3 {\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #007bff;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.search-input {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.search-input input {\r\n  flex: 1;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 4px;\r\n}\r\n\r\n.search-input button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.search-results {\r\n  background-color: #f8f9fa;\r\n  border-radius: 4px;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.search-results h4 {\r\n  font-size: 0.9rem;\r\n  color: #6c757d;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.search-results ul {\r\n  list-style-type: none;\r\n}\r\n\r\n.search-results li {\r\n  padding: 0.5rem;\r\n  border-bottom: 1px solid #dee2e6;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.search-results li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.search-results li:hover {\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.search-results .name {\r\n  font-weight: 500;\r\n}\r\n\r\n.search-results .schema {\r\n  color: #6c757d;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n/* 最近访问面板样式 */\r\n.recent-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.recent-panel h3 {\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #007bff;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.recent-panel ul {\r\n  list-style-type: none;\r\n}\r\n\r\n.recent-panel li {\r\n  padding: 0.5rem;\r\n  border-bottom: 1px solid #dee2e6;\r\n  cursor: pointer;\r\n}\r\n\r\n.recent-panel li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.recent-panel li:hover {\r\n  background-color: #e9ecef;\r\n}\r\n\r\n/* 对话框样式 */\r\n.dialog-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.dialog {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 2rem;\r\n  width: 90%;\r\n  max-width: 600px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.dialog h2 {\r\n  font-size: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  color: #007bff;\r\n}\r\n\r\n.upload-area {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.help-text {\r\n  margin-top: 0.5rem;\r\n  color: #6c757d;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.dialog-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 1rem;\r\n}\r\n\r\n.dialog-actions button {\r\n  padding: 0.5rem 1.5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.dialog-actions button:not(.cancel) {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.dialog-actions button:not(.cancel):hover {\r\n  background-color: #0069d9;\r\n}\r\n\r\n.dialog-actions button.cancel {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.dialog-actions button.cancel:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n.dialog-actions button:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 帮助对话框样式 */\r\n.help-dialog {\r\n  max-width: 800px;\r\n}\r\n\r\n.help-content {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.help-content h3 {\r\n  margin-top: 1rem;\r\n  margin-bottom: 0.5rem;\r\n  color: #007bff;\r\n}\r\n\r\n.help-content ul {\r\n  list-style-type: disc;\r\n  padding-left: 1.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.help-content li {\r\n  margin-bottom: 0.5rem;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}